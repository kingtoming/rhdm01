package com.axa.dm.autouw;

import java.lang.Number;
import java.util.Date;

rule "Rule_21_init_object"
    dialect "java"
    when
        not (Rule21Object())
    then
        Rule21Object rule21Obj = new Rule21Object();
        rule21Obj.setPolicyNoInsuredList(new ArrayList());
         rule21Obj.setPolicyNoOwnerList(new ArrayList());
          rule21Obj.setSpecialCaseTypeInsuredList(new ArrayList());
           rule21Obj.setSpecialCaseTypeOwnerList(new ArrayList());
            rule21Obj.setInsuredfullNameList(new ArrayList());
             rule21Obj.setOwnerfullNameList(new ArrayList());
        insert(rule21Obj);
    end

rule "Rule_21_extract_data_insured"
    no-loop true
    dialect "java"
    when
        $rule21Obj : Rule21Object($insuredfullNameList: insuredfullNameList, $policyNoInsuredList: policyNoInsuredList, $specialCaseTypeInsuredList: specialCaseTypeInsuredList )
        Insured( $insuredfullName : fullName != null )
		SpecialCase( $policyNo : policyNo != null , $specialCaseType : specialCaseType != null , $specialCode : specialCode in ( "A1", "B1", "C1", "D1" ) )
		Policy( role == "INS" , policyNo == $policyNo )
    then
        $insuredfullNameList.add($insuredfullName);
        $policyNoInsuredList.add($policyNo);
        $specialCaseTypeInsuredList.add($specialCaseType);
        update($rule21Obj);
    end
    
rule "Rule_21_Insured"
	dialect "java"
	when
		$processObject : ProcessObject( rule21InsuredProcessed == false )
		$rule21Obj : Rule21Object($insuredfullNameList: insuredfullNameList, $policyNoInsuredList: policyNoInsuredList, $specialCaseTypeInsuredList: specialCaseTypeInsuredList, $insuredfullNameList.size()>0 )
        

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "21" )
	    $individualResult: IndividualResult( ruleNo == "21" )
	then
		List failedReasons = new ArrayList<String>();
		for(int i=0; i<$insuredfullNameList.size();i++ ){
		    failedReasons.add("Previous policy "+ $policyNoInsuredList.get(i) +" of "+ $insuredfullNameList.get(i) +" has a "+ $specialCaseTypeInsuredList.get(i) +" case.");
		}
		
		InsuredIndividual $insuredIndividual = new InsuredIndividual();
		$insuredIndividual.setFailedReasons(failedReasons);
		$insuredIndividual.setDecision("Fail");
        $individualResult.setInsuredIndividual($insuredIndividual);
        
        
        update($individualResult);
        $processObject.setRule21InsuredProcessed(true);
        update($processObject);
end

rule "Rule_21_extract_data_owner"
    no-loop true
    dialect "java"
    when
        $rule21Obj : Rule21Object($ownerfullNameList: ownerfullNameList, $policyNoOwnerList: policyNoOwnerList, $specialCaseTypeOwnerList: specialCaseTypeOwnerList)
        Owner( $ownerfullName : fullName != null )
		SpecialCase( $policyNo : policyNo != null , $specialCaseType : specialCaseType != null , $specialCode : specialCode in ( "A1", "B1", "C1", "D1" ) )
		Policy( role == "OWN" , policyNo == $policyNo )
    then
        $ownerfullNameList.add($ownerfullName);
        $policyNoOwnerList.add($policyNo);
        $specialCaseTypeOwnerList.add($specialCaseType);
        update($rule21Obj);
    end

rule "Rule_21_Owner"
	dialect "java"
	when
        
		$processObject : ProcessObject( rule21OwnerProcessed == false )
		$rule21Obj : Rule21Object($ownerfullNameList: ownerfullNameList, $policyNoOwnerList: policyNoOwnerList, $specialCaseTypeOwnerList: specialCaseTypeOwnerList, $ownerfullNameList.size()>0 )
        
		Owner( $ownerfullName : fullName != null )
		SpecialCase( $policyNo : policyNo != null , $specialCaseType : specialCaseType != null , $specialCode : specialCode in ( "A1", "B1", "C1", "D1" ) )
		Policy( role == "OWN" , policyNo == $policyNo )

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "21" )
	    $individualResult: IndividualResult( ruleNo == "21" )
	then
		List failedReasons = new ArrayList<String>();
			for(int i=0; i<$ownerfullNameList.size();i++ ){
		    failedReasons.add("Previous policy "+ $policyNoOwnerList.get(i) +" of "+ $ownerfullNameList.get(i) +" has a "+ $specialCaseTypeOwnerList.get(i) +" case.");
		}
		OwnerIndividual $ownerIndividual = new OwnerIndividual();
		$ownerIndividual.setFailedReasons(failedReasons);
		$ownerIndividual.setDecision("Fail");
        $individualResult.setOwnerIndividual($ownerIndividual);
    
        update($individualResult);
        $processObject.setRule21OwnerProcessed(true);
        update($processObject);
end

rule "Rule_21 final"
    dialect "java"
    when
        $rule21Obj : Rule21Object($ownerfullNameList: ownerfullNameList, $policyNoOwnerList: policyNoOwnerList, $specialCaseTypeOwnerList: specialCaseTypeOwnerList )
        $processObj : ProcessObject( (rule21InsuredProcessed == true || rule21OwnerProcessed == true) , rule21FinalProcessed == false )
        $individualResult : IndividualResult(ruleNo == "21")
        $ruleObj : RuleObject( ruleNo == "21" )
        Result( $individualResultList : individualResult)
        CurrentApplication ($formId : formId)
    then
    
		$individualResult.setRuleNo($ruleObj.getRuleNo());
        $individualResult.setDecision("Fail");
        $individualResult.setRuleName($ruleObj.getRuleName());
        $individualResult.setMessageToClientEng($ruleObj.getMessageToClientEng());
        $individualResult.setMessageToClientChi($ruleObj.getMessageToClientChi());
        
        $individualResultList.add($individualResult);
        $processObj.setRule21FinalProcessed(true);
        update($processObj);
        long dateDiff = new Date().getTime() - $processObj.getStartTime().getTime();
        Utils.loggingTime($ruleObj.getRuleNo(),dateDiff);
        Utils.loggingDebug("Form ID: "+$formId + " | " + $individualResult.toJson());
    end