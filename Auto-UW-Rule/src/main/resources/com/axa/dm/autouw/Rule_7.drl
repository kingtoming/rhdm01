package com.axa.dm.autouw;

import java.lang.Number;
import java.util.Date;

rule "Rule_7_Insured with Rider"
	dialect "java"
	when
		$processObject : ProcessObject( rule7InsuredProcessed == false )
		
		$currentApplication : CurrentApplication( rider != null, rider.size() > 0 )
		(Basic( $planCode : planCode != null ) from $currentApplication.basic)
		Insured( occupationClass != null, occupationClass == "5" )
		
		exists(
		    Rider( productType != null, isValidProduct("ADD","AP","APFR","CRA","CRB","CAP","Aubaine AP Plus"))
		    or
		    Basic( productType != null, isValidProduct("ADD","AP","APFR","CRA","CRB","CAP","Aubaine AP Plus"))
		)
// 		Product( planCode == $planCode , productType in ( "ADB" ) )

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "7" )
	    $individualResult: IndividualResult( ruleNo == "7" )
	then
		List failedReasons = new ArrayList<String>();
		failedReasons.add("Selected Occupation needs review for selected benefit type");
		InsuredIndividual $insuredIndividual = new InsuredIndividual();
		$insuredIndividual.setFailedReasons(failedReasons);
		$insuredIndividual.setDecision("Fail");
        $individualResult.setInsuredIndividual($insuredIndividual);
        
        
        update($individualResult);
        $processObject.setRule7InsuredProcessed(true);
        update($processObject);
end

rule "Rule_7_Owner with Rider"
	dialect "java"
	when
		$processObject : ProcessObject( rule7OwnerProcessed == false )
		
		$currentApplication : CurrentApplication( rider != null, rider.size() > 0 )
		(Basic( $planCode : planCode != null ) from $currentApplication.basic)
		Owner( occupationClass != null, occupationClass == "5" )
		
		exists(
		    Rider( productType != null, isValidProduct("ADD","AP","APFR","CRA","CRB","CAP","Aubaine AP Plus"))
		    or
		    Basic( productType != null, isValidProduct("ADD","AP","APFR","CRA","CRB","CAP","Aubaine AP Plus"))
		)
// 		Product( planCode == $planCode , productType in ( "ADB" ) )

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "7" )
	    $individualResult: IndividualResult( ruleNo == "7" )
	then
		List failedReasons = new ArrayList<String>();
		failedReasons.add("Selected Occupation needs review for selected benefit type");
		OwnerIndividual $ownerIndividual = new OwnerIndividual();
		$ownerIndividual.setFailedReasons(failedReasons);
		$ownerIndividual.setDecision("Fail");
        $individualResult.setOwnerIndividual($ownerIndividual);
    
        update($individualResult);
        $processObject.setRule7OwnerProcessed(true);
        update($processObject);
end


rule "Rule_7_Insured without Rider"
	dialect "java"
	when
		$processObject : ProcessObject( rule7InsuredProcessed == false )
		
		$currentApplication : CurrentApplication( rider == null || ( rider != null && rider.size() == 0))
		(Basic( $planCode : planCode != null ) from $currentApplication.basic)
		Insured( occupationClass != null, occupationClass == "5" )
		
		Basic( productType != null, isValidProduct("ADD","AP","APFR","CRA","CRB","CAP","Aubaine AP Plus"))
// 		Product( planCode == $planCode , productType in ( "ADB" ) )

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "7" )
	    $individualResult: IndividualResult( ruleNo == "7" )
	then
		List failedReasons = new ArrayList<String>();
		failedReasons.add("Selected Occupation needs review for selected benefit type");
		InsuredIndividual $insuredIndividual = new InsuredIndividual();
		$insuredIndividual.setFailedReasons(failedReasons);
		$insuredIndividual.setDecision("Fail");
        $individualResult.setInsuredIndividual($insuredIndividual);
        
        
        update($individualResult);
        $processObject.setRule7InsuredProcessed(true);
        update($processObject);
end

rule "Rule_7 final"
    dialect "java"
    when
        $processObj : ProcessObject( (rule7InsuredProcessed == true || rule7OwnerProcessed == true) , rule7FinalProcessed == false )
        $individualResult : IndividualResult(ruleNo == "7")
        $ruleObj : RuleObject( ruleNo == "7" )
        Result( $individualResultList : individualResult)
        CurrentApplication ($formId : formId)
    then
    
		$individualResult.setRuleNo($ruleObj.getRuleNo());
        $individualResult.setDecision("Fail");
        $individualResult.setRuleName($ruleObj.getRuleName());
        $individualResult.setMessageToClientEng($ruleObj.getMessageToClientEng());
        $individualResult.setMessageToClientChi($ruleObj.getMessageToClientChi());
        
        $individualResultList.add($individualResult);
        $processObj.setRule7FinalProcessed(true);
        update($processObj)
        long dateDiff = new Date().getTime() - $processObj.getStartTime().getTime();
        Utils.loggingTime($ruleObj.getRuleNo(),dateDiff);
        Utils.loggingDebug("Form ID: "+$formId + " | " + $individualResult.toJson());
    end
