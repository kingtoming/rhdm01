package com.axa.dm.autouw;

import java.lang.Number;
import java.util.Date;

rule "Rule_6_Insured"
	dialect "java"
	when
		$processObject : ProcessObject( rule6InsuredProcessed == false )
		Payor (Constants.insuredPayorId.equals(role))
		Insured ( replaceofPolicyOption != null, replaceofPolicyOption == true )

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "6" )
	    $individualResult: IndividualResult( ruleNo == "6" )
	then
		List failedReasons = new ArrayList<String>();
		failedReasons.add("Insured / Policy Owner has replaced / intends to replace existing life insurance policy(ies) with this application.");
		InsuredIndividual $insuredIndividual = new InsuredIndividual();
		$insuredIndividual.setFailedReasons(failedReasons);
		$insuredIndividual.setDecision("Fail");
        $individualResult.setInsuredIndividual($insuredIndividual);
        
        
        update($individualResult);
        $processObject.setRule6InsuredProcessed(true);
        update($processObject);
end

rule "Rule_6_Owner"
	dialect "java"
	when
		$processObject : ProcessObject( rule6OwnerProcessed == false )
		Payor (Constants.ownerPayorId.equals(role))
		Owner ( replaceofPolicyOption != null,  replaceofPolicyOption == true)

		$resultObj : Result( $individualResultList : individualResult)
	    $ruleObj : RuleObject( ruleNo == "6" )
	    $individualResult: IndividualResult( ruleNo == "6" )
	then
		List failedReasons = new ArrayList<String>();
		failedReasons.add("Insured / Policy Owner has replaced / intends to replace existing life insurance policy(ies) with this application.");
		OwnerIndividual $ownerIndividual = new OwnerIndividual();
		$ownerIndividual.setFailedReasons(failedReasons);
		$ownerIndividual.setDecision("Fail");
        $individualResult.setOwnerIndividual($ownerIndividual);
    
        update($individualResult);
        $processObject.setRule6OwnerProcessed(true);
        update($processObject);
end

rule "Rule_6 final"
    dialect "java"
    when
        $processObj : ProcessObject( (rule6InsuredProcessed == true || rule6OwnerProcessed == true) , rule6FinalProcessed == false )
        $individualResult : IndividualResult(ruleNo == "6")
        $ruleObj : RuleObject( ruleNo == "6" )
        Result( $individualResultList : individualResult)
        CurrentApplication ($formId : formId)
    then
    
		$individualResult.setRuleNo($ruleObj.getRuleNo());
        $individualResult.setDecision("Fail");
        $individualResult.setRuleName($ruleObj.getRuleName());
        $individualResult.setMessageToClientEng($ruleObj.getMessageToClientEng());
        $individualResult.setMessageToClientChi($ruleObj.getMessageToClientChi());
        
        $individualResultList.add($individualResult);
        $processObj.setRule6FinalProcessed(true);
        long dateDiff = new Date().getTime() - $processObj.getStartTime().getTime();
        Utils.loggingTime($ruleObj.getRuleNo(),dateDiff);
        Utils.loggingDebug("Form ID: "+$formId + " | " + $individualResult.toJson());
    end