package com.axa.dm.autouw;


import java.lang.Number;
import java.util.Date;
import java.util.Arrays;


rule "Rule_2_init_object"
    dialect "java"
    when
        not (Rule2Object())
    then
        // System.out.println("Rule_2_init_object");
        Rule2Object rule2Obj = new Rule2Object();
        // rule2Obj.setInsuredCount(BigDecimal.ZERO);
        rule2Obj.setPolicyNoInsuredList(new ArrayList());
        rule2Obj.setApplicationNoInsuredList(new ArrayList());
        
        // rule2Obj.setOwnerCount(BigDecimal.ZERO);
        rule2Obj.setPolicyNoOwnerList(new ArrayList());
        rule2Obj.setApplicationNoOwnerList(new ArrayList());
        insert(rule2Obj);
    end


rule "Current_Insured_Policy_Application"
    dialect "java"
    no-loop true
    when
    $processObj : ProcessObject( rule2Processed == false, $policyList : policy, $applicationList: application)
    $rule2Obj : Rule2Object(rule2InsuredProcessed == false, $policyNoInsuredList: policyNoInsuredList, $applicationNoInsuredList: applicationNoInsuredList)
    // Product( productType in ( "WPD", "WPDD" ) , $validPlanCode : planCode)
    Number ($policyCount : intValue()) from accumulate(
        Policy(), count(1)
    )
    
    Number (intValue() == $policyCount) from accumulate(
        Policy(productType!=null),count(1)
    )
    
    Number( $ins_ins_p_cnt : intValue() >= 0 ) from accumulate ( 
        Policy ( 
            currentRole == "INS", role == "INS", 
            dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
            productType != null,
            !isValidProduct("WPD","WPDD")
        ),
			count(1)
	)
	
	Number( $ins_own_p_cnt : intValue() >= 0 ) from accumulate ( 
        Policy ( 
            currentRole == "INS", role == "OWN", 
            dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
            productType != null,
            isValidProduct("WPD","WPDD"),
            isInforce(policyStatus)
        ),
			count(1)
	)
	
	Number ($appCount : intValue()) from accumulate(
        Application(), count(1)
    )
    
    Number (intValue() == $appCount) from accumulate(
        Application(productType!=null),count(1)
    )
// 	$ins_own_p_cnt : Number( intValue() >= 0 ) from accumulate ( Policy ( currentRole == "INS", role == "OWN", policyStatus in ("1","2","5","6","B","F"), planCode == $validPlanCode, dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0),
// 			count(1)) 
	Number( $ins_ins_a_cnt : intValue() >= 0 ) from accumulate ( 
	    Application ( 
	       currentRole == "INS", role == "INS", 
	       dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
	       productType != null,
            !isValidProduct("WPD","WPDD")
	    ),
		count(1)
	) 
	
	 Number( $ins_own_a_cnt :intValue() >= 0 ) from accumulate ( 
	    Application ( 
	       currentRole == "INS", role == "OWN", 
	       dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
	       productType != null,
            isValidProduct("WPD","WPDD")
	    ),
		count(1)
	) 
	
// 	$ins_own_a_cnt : Number( intValue() >= 0 ) from accumulate ( Application ( currentRole == "INS", role == "OWN", applicationStatus in ("00","01","02","04","05","06","07"), planCode == $validPlanCode, dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0),
// 			count(1)) 
	
	
	eval ( $ins_ins_p_cnt + $ins_own_p_cnt + $ins_ins_a_cnt + $ins_own_a_cnt  > 3 )
	
    then
    
    // System.out.println("Current_Insured_Policy_Application");
        int total_cnt = $ins_ins_p_cnt + $ins_own_p_cnt + $ins_ins_a_cnt + $ins_own_a_cnt;

        $rule2Obj.setInsuredCount( total_cnt );
        
        if ($policyList != null){
        for(int i=0; i<$policyList.size(); i++){
    		Policy p = (Policy) $policyList.get(i);
    		if(
    		    p.getCurrentRole().equalsIgnoreCase("INS") 
    		    && p.getRole().equalsIgnoreCase("INS") 
    		    && p.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
    		    && !p.isValidProduct("WPD","WPDD")
    		   ){
    			$policyNoInsuredList.add(p.getPolicyNo());
    		}

    		if(
    		    p.getCurrentRole().equalsIgnoreCase("INS") 
    		    && p.getRole().equalsIgnoreCase("OWN") 
    		    && p.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
    		    && p.isValidProduct("WPD","WPDD")
    		   ){
    		  //  System.out.println(p.getPolicyNo());
    			$policyNoInsuredList.add(p.getPolicyNo());
    		}
    	}
        }
    	
    	if ($applicationList != null){
    	for(int i=0; i<$applicationList.size();i++){
    	    
    		Application a = (Application) $applicationList.get(i);
    		if(
    		    a.getCurrentRole().equalsIgnoreCase("INS") 
    		    && a.getRole().equalsIgnoreCase("INS") 
    		    && a.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
    		    && !a.isValidProduct("WPD","WPDD")
    		 ){
    			$applicationNoInsuredList.add(a.getApplicationNo());
    		}

    		if(
    		    a.getCurrentRole().equalsIgnoreCase("INS") 
    		    && a.getRole().equalsIgnoreCase("OWN") 
    		    && a.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
    		    && a.isValidProduct("WPD","WPDD")
    		 ){
    			$applicationNoInsuredList.add(a.getApplicationNo());
    		}   
    	}
    	}
    	
    	$rule2Obj.setPolicyNoInsuredList($policyNoInsuredList);
    	$rule2Obj.setApplicationNoInsuredList($applicationNoInsuredList);
        $rule2Obj.setRule2InsuredProcessed(true);
        update($rule2Obj);
end


rule "Current_Owner_Policy_Application"
    dialect "java"
    no-loop true
    when
    $processObj : ProcessObject( rule2Processed == false, $policyList : policy, $applicationList: application)
    $rule2Obj : Rule2Object(rule2OwnerProcessed == false, $policyNoOwnerList: policyNoOwnerList, $applicationNoOwnerList: applicationNoOwnerList)
    // Product( productType in ( "WPD", "WPDD" ) , $validPlanCode : planCode)
    
    Number ($policyCount : intValue()) from accumulate(
        Policy(), count(1)
    )
    
    Number (intValue() == $policyCount) from accumulate(
        Policy(productType!=null),count(1)
    )
    
    Number( $own_ins_p_cnt : intValue() >= 0 ) from accumulate ( 
        Policy ( 
            currentRole == "OWN", role == "INS", 
            dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
            productType != null,
            !isValidProduct("WPD","WPDD")
        ),
        count(1)
    )
    
    Number( $own_own_p_cnt : intValue() >= 0 ) from accumulate ( 
        Policy ( 
            currentRole == "OWN", role == "OWN", 
            isInforce(policyStatus), 
            dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
            productType != null,
            isValidProduct("WPD","WPDD")
        ),
            count(1)
    ) 
    
    Number ($appCount : intValue()) from accumulate(
        Application(), count(1)
    )
    
    Number (intValue() == $appCount) from accumulate(
        Application(productType!=null),count(1)
    )
    
    Number( $own_ins_a_cnt : intValue() >= 0 ) from accumulate ( 
        Application ( 
            currentRole == "OWN", role == "INS", 
            dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
            productType != null,
            !isValidProduct("WPD","WPDD")
        ),
            count(1)
    ) 
    Number( $own_own_a_cnt : intValue() >= 0 ) from accumulate ( 
        Application ( 
            currentRole == "OWN", role == "OWN", 
            dateofSubmissionCal.compareTo($processObj.withinPastSixMonth()) > 0,
            productType != null,
            isValidProduct("WPD","WPDD")
        ),
        count(1)
    ) 
    
    

    eval ( $own_ins_p_cnt + $own_own_p_cnt + $own_ins_a_cnt + $own_own_a_cnt  > 3 )
    
    then
    
     // System.out.println("Current_Owner_Policy_Application");
        int total_cnt = $own_ins_p_cnt + $own_own_p_cnt + $own_ins_a_cnt + $own_own_a_cnt;

        $rule2Obj.setOwnerCount( total_cnt );
        
        if ($policyList != null){
        for(int i=0; i<$policyList.size(); i++){
            Policy p = (Policy) $policyList.get(i);
            if(
                p.getCurrentRole().equalsIgnoreCase("OWN") 
                && p.getRole().equalsIgnoreCase("INS") 
                && p.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
                && !p.isValidProduct("WPD","WPDD")
            ){
                $policyNoOwnerList.add(p.getPolicyNo());
            }

            if(
                p.getCurrentRole().equalsIgnoreCase("OWN") 
                && p.getRole().equalsIgnoreCase("OWN") 
                && p.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
                && p.isValidProduct("WPD","WPDD")
            ){
                $policyNoOwnerList.add(p.getPolicyNo());
            }
        }
        }
        
        
        if ($applicationList != null){
        for(int i=0; i<$applicationList.size();i++){
            
            Application a = (Application) $applicationList.get(i);
            if(
                a.getCurrentRole().equalsIgnoreCase("OWN") && 
                a.getRole().equalsIgnoreCase("INS") && 
                a.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
                && !a.isValidProduct("WPD","WPDD")
            ){
                $applicationNoOwnerList.add(a.getApplicationNo());
            }

            if(
                a.getCurrentRole().equalsIgnoreCase("OWN") 
                && a.getRole().equalsIgnoreCase("OWN") 
                // && Arrays.asList("00","01","02","04","05","06","07").contains(a.getApplicationStatus()) 
                // && a.getPlanCode() == $validPlanCode 
                && a.getDateofSubmissionCal().compareTo($processObj.withinPastSixMonth()) > 0
                && a.isValidProduct("WPD","WPDD")
            ){
                $applicationNoOwnerList.add(a.getApplicationNo());
            }    
        }
        }
        
        $rule2Obj.setPolicyNoOwnerList($policyNoOwnerList);
        $rule2Obj.setApplicationNoOwnerList($applicationNoOwnerList);
        $rule2Obj.setRule2OwnerProcessed(true);
        update($rule2Obj);
end

rule "Rule_2_Final"
	dialect "java"
	
	when
        $processObj : ProcessObject( rule2Processed == false, $policyList : policy)
        $rule2Obj : Rule2Object( (rule2InsuredProcessed == true && $policyNoInsuredList: policyNoInsuredList && $applicationNoInsuredList: applicationNoInsuredList) || ( rule2OwnerProcessed == true && $policyNoOwnerList: policyNoOwnerList && $applicationNoOwnerList: applicationNoOwnerList))
        $resultObj : Result( $individualResultList : individualResult)
		$ruleObj : RuleObject( ruleNo == "2" )
		CurrentApplication ($formId : formId)
	then
	   // System.out.println("Rule_2_Final");
		$processObj.setRule2Processed( true );
		List failedReasons = new ArrayList<String>();
		List failedApplicationNo = new ArrayList<String>();
		failedReasons.add("More than 3 applications submitted within past 6 months");
		
		IndividualResult $individualResult = new IndividualResult();
		
		// Insured
		if($applicationNoInsuredList.size()>0 || $policyNoInsuredList.size()>0){
    		InsuredIndividual $insuredIndividual = new InsuredIndividual();
    		$insuredIndividual.setFailedReasons(failedReasons);
    		$insuredIndividual.setDecision("Fail");
		
    		List otherInsuredDetails = new ArrayList<OtherDetailObj>();
    		OtherDetailObj o = new OtherDetailObj();
            o.setName("Number of applications submitted");
            o.setValue(Integer.toString($applicationNoInsuredList.size() + $policyNoInsuredList.size())); 
            otherInsuredDetails.add(o);  
    		
    		OtherDetailObj o2 = new OtherDetailObj();
            o2.setName("Associated Policy Number");
            ArrayList<String> al= new ArrayList<String>();
            al.addAll($applicationNoInsuredList);
            al.addAll($policyNoInsuredList);
            o2.setValue(String.join(", ", al));
            otherInsuredDetails.add(o2);  
    		
            $insuredIndividual.setOtherDetails(otherInsuredDetails);
            $individualResult.setInsuredIndividual($insuredIndividual);
		}
		
	    // Owner
	    if($applicationNoOwnerList.size()>0 || $policyNoOwnerList.size()>0){
            OwnerIndividual $ownerIndividual = new OwnerIndividual();
            $ownerIndividual.setFailedReasons(failedReasons);
    		$ownerIndividual.setDecision("Fail");
		     List otherOwnerDetails = new ArrayList<OtherDetailObj>();

		    OtherDetailObj o3 = new OtherDetailObj();
            o3.setName("Number of applications submitted");
            o3.setValue(Integer.toString($applicationNoOwnerList.size() + $policyNoOwnerList.size())); 
            otherOwnerDetails.add(o3);
    		
    		 OtherDetailObj o4 = new OtherDetailObj();
            o4.setName("Associated Policy Number");
            
            ArrayList<String> al= new ArrayList<String>();
            al.addAll($applicationNoOwnerList);
            al.addAll($policyNoOwnerList);
            
            o4.setValue(String.join(", ", al));
            otherOwnerDetails.add(o4); 
    		
            $ownerIndividual.setOtherDetails(otherOwnerDetails);
            $individualResult.setOwnerIndividual($ownerIndividual);
	    }
	
        $individualResult.setRuleNo($ruleObj.getRuleNo());
        $individualResult.setDecision("Fail");
        $individualResult.setRuleName($ruleObj.getRuleName());
        $individualResult.setMessageToClientEng($ruleObj.getMessageToClientEng());
        $individualResult.setMessageToClientChi($ruleObj.getMessageToClientChi());
        $individualResultList.add( $individualResult );
        update($processObj);
        long dateDiff = new Date().getTime() - $processObj.getStartTime().getTime();
        Utils.loggingTime($ruleObj.getRuleNo(),dateDiff);
        Utils.loggingDebug("Form ID: "+$formId + " | " + $individualResult.toJson());
end